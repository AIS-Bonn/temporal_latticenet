core: {
    loguru_verbosity: 4
    hidpi: true
    debug_with_profiler: true //makes the profiler print when it starts and stops time
}

train: {
    dataset_name: "parislille" //semantickitti
    with_viewer: false
    with_visdom: false
    with_debug_output: false
    with_error_checking: false
    batch_size: 1
    lr:0.001  // works well for adam with reduceonplateu and with the coarsening which doest the concatenation (if we do concatenation we have to reduce learning rate)
    //lr: 0.005 //for radam we use a higher learning rate than adam as explained here which recommend x5 https://forums.fast.ai/t/meet-radam-imo-the-new-state-of-the-art-ai-optimizer/52656/41
    //lr:0.001  // works well for adam with reduceonplateu and with the coarsening which doest the concatenation (if we do concatenation we have to reduce learning rate)
    //lr:0.01  // sgd
    weight_decay: 1e-3
    training_epochs: 29 
    
    save_checkpoint: false
    checkpoint_path: "/workspace/master_tests"
    load_checkpoint: false
    load_checkpoint_model: "model_moving_sigma0.9_typenone-none-none-cli_frames3_scope3_epoch_5.pt"

    clip_gradient: false
    clipping_value: 100

    render_gradient_tree: false
    render_path: "./gradient_tree"
}

model: {
    //SHOULD BE USED WITH A SIGMA OF 0.6
    //positions_mode: "xyz"
    //values_mode: "reflectance"
    //pointnet_layers: [16,32,64]
    //pointnet_start_nr_channels: 64
    //nr_downsamples: 2
    //nr_blocks_down_stage: [2,2,2]
    //nr_blocks_bottleneck: 3
    //nr_blocks_up_stage: [1,2,2]
    //nr_levels_down_with_normal_resnet: 3
    //nr_levels_up_with_normal_resnet: 3
    //compression_factor: 1.0
    //dropout_last_layer: 0.0

    // FOR A SIGMA OF 0.9
    positions_mode: "xyz"
    values_mode: "reflectance" //confidence, reflectance, none
    pointnet_layers: [16,32]
    pointnet_start_nr_channels: 32
    nr_downsamples: 2
    nr_blocks_down_stage: [1,1,1]
    nr_blocks_bottleneck: 1
    nr_blocks_up_stage: [1,1,1]
    nr_levels_down_with_normal_resnet: 3
    nr_levels_up_with_normal_resnet: 3
    compression_factor: 1.0
    dropout_last_layer: 0.0

    sequence_learning: true
    //rnn_modules: ["gru", "none", "none", "none"]
    //rnn_modules: ["gru", "gru", "cli", "cli"] // options are "Linear/MaxPool/CGA/CLI/LSTM/GRU/None"
    //rnn_modules: ["none", "none", "none", "cli"] 
    rnn_modules: ["gru", "gru", "cli", "gru"] // best one yet

    //we run some experiments by setting the string here which if it's none then we run with the default full model:
    // none - default model with full features
    // slice_no_deform - doesn't use delta weights for the slicing, by setting them to zero
    // pointnet_no_elevate - doesn't elevate the distributed points into a higher dimensional space before doing the max but still substracts the local mean
    // pointnet_no_local_mean - doesn't perform the local mean substraction of the xyz positions and just uses them as is
    // pointnet_no_elevate_no_local_mean - doesnt elevate and doesnt do local mean
    // splat - just does a mean of all the features that fall into the lattice vertex without any elevatation or mean substraction
    // attention_pool - does an attention based pooling for pointnet instead of the maxpool
    experiment: "none" 
}



lattice_gpu: {
    hash_table_capacity: 100000 //good for semantic kitti which splat around 10k with sigma of 1
    nr_sigmas: 1

    sigma_0: "0.9 3" //sigma of X affecting Y dimensions of the positions vector
}

loader_paris_lille: {
    frames_per_seq: 4  // is only relevant, if sequence_learning: true
    cloud_scope: 3 // t, t+1, ... should have a time difference of cloud_scope many clouds
    accumulate_clouds: false 
    include_moving_classes: true
    synthkitti: false // we want to load a single cloud that has a single car added to it

    shuffle: false

    dataset_path: "/workspace/semantic_kitti/paris-lille-3d/Benchmark/test_10_classes/" //FOR ROBO4
    validation_cloud: "Lille2.ply"
    xml_config: "/workspace/schuett_temporal_lattice/seq_config/paris-lille-stationary-classes.xml"
    xml_config_all: "/workspace/schuett_temporal_lattice/seq_config/paris-lille-moving-classes.xml"
    yaml_config: "/workspace/schuett_temporal_lattice/seq_config/paris-lille.yaml" //FOR ROBO4
    fifty_classes: false
    subsample_percentage: 0.1

    autostart: false
    mode: "test" // train, test, val
    sequences: "all" //between 00 and 10 without 08, also can be "all" which means it will run through all sequences shuffled or not
    nr_clouds_to_skip: 0
    nr_clouds_to_read: -1
    //nr_clouds_to_read: 100
    cap_distance: 60
    min_distance: 0
    shuffle_points: false
    do_pose: true
    normalize: false // normalize the point cloud between [-1 and 1] TAKES PRECEDENCE OVER THE POSE TRANSFORMATION
    
    do_overfit: false //return only overfit_num_clouds number of samples the whole time
    overfit_num_clouds: 10

    debug_loader: false  // for debugging purpose
    seq_same_cloud: false // all clouds in the sequence are the same

    label_mngr: {
        // TODO
        labels_file: "/workspace/schuett_temporal_lattice/colorscheme_and_labels/paris-lille/labels.txt"
        color_scheme_file: "/workspace/schuett_temporal_lattice/colorscheme_and_labels/paris-lille/color_scheme.txt"
        frequency_file: "/workspace/schuett_temporal_lattice/colorscheme_and_labels/paris-lille/frequency.txt"

        unlabeled_idx: 0
    }

    transformer: {
         random_translation_xyz_magnitude: 0.0
         random_translation_xz_magnitude: 20.0 // works
         rotation_y_max_angle: 10.0 // works
         random_stretch_xyz_magnitude: 0.0
         adaptive_subsampling_falloff_start: 0.0
         adaptive_subsampling_falloff_end: 0.0
         random_subsample_percentage: 0.0 //randomly removed x percent of the pointcloud
         random_mirror_x: true // works
         random_mirror_z: true // works
         random_rotation_90_degrees_y: true
         hsv_jitter: [0,0,0]
         chance_of_xyz_noise: 0.0
         xyz_noise_stddev: [0.0, 0.0, 0.0]

    }

    //no transformer
    //transformer: {
    //    random_translation_xyz_magnitude: 0.0
    //    random_translation_xz_magnitude: 0.0
    //    rotation_y_max_angle: 0.0
    //    random_stretch_xyz_magnitude: 0.0
    //    adaptive_subsampling_falloff_start: 0.0
    //    adaptive_subsampling_falloff_end: 0.0
    //    random_subsample_percentage: 0.0 //randomly removed x percent of the pointcloud
    //    random_mirror_x: false
    //    random_mirror_z: false
    //    random_rotation_90_degrees_y: false
    //    hsv_jitter: [0,0,0]
    //    chance_of_xyz_noise: 0.0
    //    xyz_noise_stddev: [0.0, 0.0, 0.0]

    //    }
}



visualization: {
    show_gui: true

    subsample_factor: 1
    enable_culling: true

    cam: {
        fov: 60 //can be a float value (fov: 30.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        near: 0.3 //can be a float value (near: 0.01) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        far: "auto" //can be a float value (far: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        exposure: 1.0 //can be floar or "auto"
    }

    ssao: {
        enable_ssao: false
        ao_downsample: 0
        kernel_radius: "auto" //can be a float value (kernel_radius: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        ao_power: 4
        ao_blur_sigma_spacial: 2.0
        ao_blur_sigma_depth: 0.0001
    }

    edl: {
        auto_settings: true
        enable_edl_lighting: true
        edl_strength: 8.0
    }

    background:{
        show_background_img: false
        background_img_path: ""
    }

    ibl: {
        enable_ibl: false
        show_environment_map: false
        // environment_map_path: "/media/rosu/Data/data/sibl/Desert_Highway/Road_to_MonumentValley_Ref.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Footprint_Court/Footprint_Court_2k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Circus_Backstage/Circus_Backstage_3k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/canary_wharf_4k.hdr"
        // environment_map_path: "sibl/Barcelona_Rooftops/Barce_Rooftop_C_3k.hdr"
        // environment_cubemap_resolution: 2048
        environment_cubemap_resolution: 512
        irradiance_cubemap_resolution: 32
        prefilter_cubemap_resolution: 128
        brdf_lut_resolution: 512
    }

    lights:{
        nr_spot_lights: 0
        spot_light_0: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 2048
        }
        spot_light_1: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
        spot_light_2: {
            power: "auto"  //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
    }

}
