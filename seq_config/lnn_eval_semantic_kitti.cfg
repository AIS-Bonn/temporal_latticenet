core: {
    loguru_verbosity: 4
    hidpi: false
    debug_with_profiler: false //makes the profiler print when it starts and stops time
}

eval: {
    dataset_name: "semantickitti" //semantickitti
    with_viewer: false
    
    save_checkpoint: false
    checkpoint_path: "/workspace/temporal_latticenet/pretrained_models"
    load_checkpoint_model: "model_moving_setKitti_sigma0.6_typelstm-lstm-cli-lstm_frames4_scope3_epoch_2.pt"
    
    do_write_predictions: false
    output_predictions_path: "./predictions/lstm_lstm_cli_lstm"
}

model: {
    //SHOULD BE USED WITH A SIGMA OF 0.6
    positions_mode: "xyz"
    values_mode: "reflectance"
    pointnet_channels_per_layer: [16,32,64]
    pointnet_start_nr_channels: 64
    nr_downsamples: 2
    nr_blocks_down_stage: [2,2,2]
    nr_blocks_bottleneck: 3
    nr_blocks_up_stage: [1,2,2]
    nr_levels_down_with_normal_resnet: 3
    nr_levels_up_with_normal_resnet: 3
    compression_factor: 1.0
    dropout_last_layer: 0.0

    // FOR A SIGMA OF 0.9
    //positions_mode: "xyz"
    //values_mode: "reflectance" //reflectance, none
    //pointnet_channels_per_layer: [16,32]
    //pointnet_start_nr_channels: 32
    //nr_downsamples: 2
    //nr_blocks_down_stage: [1,1,1]
    //nr_blocks_bottleneck: 1
    //nr_blocks_up_stage: [1,1,1]
    //nr_levels_down_with_normal_resnet: 3
    //nr_levels_up_with_normal_resnet: 3
    //compression_factor: 1.0
    //dropout_last_layer: 0.0

    sequence_learning: true
    rnn_modules: ["lstm", "lstm", "cli", "lstm"] 

    experiment: "none"  
}

lattice_gpu: {
    hash_table_capacity: 100000 //good for semantic kitti which splat around 10k with sigma of 1
    nr_sigmas: 1
    sigma_0: "0.6 3" //sigma of X affecting Y dimensions of the positions vector
}

loader_semantic_kitti: {    
    dataset_path: "/workspace/Data/SemanticKitti/dataset" //FOR DOCKER 
    yaml_config: "/workspace/temporal_latticenet/seq_config/semantic-kitti.yaml" 
    yaml_config_all: "/workspace/temporal_latticenet/seq_config/semantic-kitti-all.yaml" 


    // SEQUENCE DEFINITION
    accumulate_clouds: false 
    frames_per_seq: 4       // if sequence_learning: true
    cloud_scope: 3          
    include_moving_classes: true


    // GENERAL LOADER DEF
    sequences: "all"        //string of the sequence, e.g. "00" or "11" OR "all"
    shuffle: false          // shuffle the clouds
    shuffle_points: false   // shuffle the points in every cloud
    do_pose: true           // common reference frame
    nr_clouds_to_skip: 0
    nr_clouds_to_read: -1
    cap_distance: -1
    min_distance: -1


    // SPECIAL LOADERS
    normalize: false        // normalize the point cloud between [-1 and 1] TAKES PRECEDENCE OVER THE POSE TRANSFORMATION
    do_overfit: false       //return only overfit_num_clouds number of samples the whole time
    overfit_num_clouds: 10
    debug_loader: false     // for debugging purpose
    seq_same_cloud: false   // all clouds in the sequence are the same
    synthkitti: false

    label_mngr: {
        labels_file: "/workspace/temporal_latticenet/colorscheme_and_labels/semantic-kitti/labels.txt"
        color_scheme_file: "/workspace/temporal_latticenet/colorscheme_and_labels/semantic-kitti/color_scheme.txt"
        frequency_file: "/workspace/temporal_latticenet/colorscheme_and_labels/semantic-kitti/frequency.txt"
        frequency_file_all: "/workspace/temporal_latticenet/colorscheme_and_labels/semantic-kitti/frequency_26.txt"

        unlabeled_idx: 0
    }

    //no transformer
    transformer: {
        random_translation_xyz_magnitude: 0.0
        random_translation_xz_magnitude: 0.0
        rotation_y_max_angle: 0.0
        random_stretch_xyz_magnitude: 0.0
        adaptive_subsampling_falloff_start: 0.0
        adaptive_subsampling_falloff_end: 0.0
        random_subsample_percentage: 0.0 //randomly removed x percent of the pointcloud
        random_mirror_x: false
        random_mirror_z: false
        random_rotation_90_degrees_y: false
        hsv_jitter: [0,0,0]
        chance_of_xyz_noise: 0.0
        xyz_noise_stddev: [0.0, 0.0, 0.0]

    }

}



visualization: {
    show_gui: true

    subsample_factor: 1
    enable_culling: true

    cam: {
        fov: 60 //can be a float value (fov: 30.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        near: 0.3 //can be a float value (near: 0.01) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        far: "auto" //can be a float value (far: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        exposure: 1.0 //can be floar or "auto"
    }

    ssao: {
        enable_ssao: false
        ao_downsample: 0
        kernel_radius: "auto" //can be a float value (kernel_radius: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        ao_power: 4
        ao_blur_sigma_spacial: 2.0
        ao_blur_sigma_depth: 0.0001
    }

    edl: {
        auto_settings: true
        enable_edl_lighting: true
        edl_strength: 8.0
    }

    background:{
        show_background_img: false
        background_img_path: ""
    }

    ibl: {
        enable_ibl: false
        show_environment_map: false
        environment_cubemap_resolution: 512
        irradiance_cubemap_resolution: 32
        prefilter_cubemap_resolution: 128
        brdf_lut_resolution: 512
    }

    lights:{
        nr_spot_lights: 0
        spot_light_0: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 2048
        }
        spot_light_1: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
        spot_light_2: {
            power: "auto"  //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
    }

}
